<?php

declare(strict_types=1);

namespace {{ namespace }};

use {{ modelNamespace }}\{{ modelClass }};
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;

class {{ controllerName }} extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        return view('{{ viewPath }}');
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        return view('{{ viewPath }}.create');
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Request $request)
    {
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'required|email|unique:{{ tableName }},email',
        ]);

        ${{ modelVariable }} = {{ modelClass }}::create($validated);

        return redirect()->route('{{ routeName }}.index')
            ->with('success', '{{ modelClass }} created successfully.');
    }

    /**
     * Display the specified resource.
     */
    public function show({{ modelClass }} ${{ modelVariable }})
    {
        return view('{{ viewPath }}.show', compact('{{ modelVariable }}'));
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit({{ modelClass }} ${{ modelVariable }})
    {
        return view('{{ viewPath }}.edit', compact('{{ modelVariable }}'));
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Request $request, {{ modelClass }} ${{ modelVariable }})
    {
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'required|email|unique:{{ tableName }},email,' . ${{ modelVariable }}->id,
        ]);

        ${{ modelVariable }}->update($validated);

        return redirect()->route('{{ routeName }}.index')
            ->with('success', '{{ modelClass }} updated successfully.');
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{ modelClass }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->delete();

        return response()->json([
            'message' => '{{ modelClass }} deleted successfully.'
        ]);
    }
}